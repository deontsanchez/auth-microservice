version: '3.8'

services:
  # Auth Service
  auth:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    depends_on:
      - mongo
      - rabbitmq
    environment:
      - PORT=3000
      - MONGODB_URI=mongodb://mongo:27017/auth-service
      - JWT_SECRET=your_jwt_secret_key_here
      - JWT_EXPIRES_IN=1d
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - NODE_ENV=production
    volumes:
      - ./src:/usr/src/app/src
      - ./dist:/usr/src/app/dist
    restart: always
    networks:
      - auth-network

  # Development Service with Hot Reload
  auth-dev:
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run watch
    ports:
      - '3001:3000'
    depends_on:
      - mongo
      - rabbitmq
    environment:
      - PORT=3000
      - MONGODB_URI=mongodb://mongo:27017/auth-service
      - JWT_SECRET=your_jwt_secret_key_here
      - JWT_EXPIRES_IN=1d
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - NODE_ENV=development
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - auth-network

  # MongoDB
  mongo:
    image: mongo:latest
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db
    networks:
      - auth-network

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - auth-network

volumes:
  mongo-data:
  rabbitmq-data:

networks:
  auth-network:
    driver: bridge
